sudo: required

services:
  - docker

jobs:
  include:
    # Travis doesn't seem to be able to do matrix expansion per build stage... yet?
    # Manually expand for now

    #
    # scons default builds
    #
    #
    # Rippled does not build with musl without compatibility patches atm.
    #
    # - stage: default_scons
    #   env:
    #     - DISTRO=alpine-3.5
    #   script:
    #   - cd $DISTRO
    #   - docker build --no-cache -t rippled/$DISTRO .
    #   - docker run --rm -t rippled/$DISTRO /bin/bash -c "cd /rippled && scons && /rippled/build/rippled -u"
    # - stage: default_scons
    #   env:
    #     - DISTRO=alpine-3.6
    #   script:
    #   - cd $DISTRO
    #   - docker build --no-cache -t rippled/$DISTRO .
    #   - docker run --rm -t rippled/$DISTRO /bin/bash -c "cd /rippled && scons && /rippled/build/rippled -u"
    # - stage: default_scons
    #   env:
    #     - DISTRO=alpine-edge
    #   script:
    #   - cd $DISTRO
    #   - docker build --no-cache -t rippled/$DISTRO .
    #   - docker run --rm -t rippled/$DISTRO /bin/bash -c "cd /rippled && scons && /rippled/build/rippled -u"
    - stage: default_scons
      env:
        - DISTRO=archlinux
      script:
      - cd $DISTRO
      - docker build --no-cache -t rippled/$DISTRO .
      - docker run --rm -t rippled/$DISTRO /bin/bash -c "cd /rippled && scons && /rippled/build/rippled -u"
    #
    # CentOS 7 only ships gcc 4.8, which doesn't support C++14
    #
    # - stage: default_scons
    #   env:
    #     - DISTRO=centos-7
    #   script:
    #   - cd $DISTRO
    #   - docker build --no-cache -t rippled/$DISTRO .
    #   - docker run --rm -t rippled/$DISTRO /bin/bash -c "cd /rippled && scons && /rippled/build/rippled -u"
    #
    # Wait for https://github.com/ripple/rippled/pull/2259
    #
    # - stage: default_scons
    #   env:
    #     - DISTRO=debian-buster
    #   script:
    #   - cd $DISTRO
    #   - docker build --no-cache -t rippled/$DISTRO .
    #   - docker run --rm -t rippled/$DISTRO /bin/bash -c "cd /rippled && scons && /rippled/build/rippled -u"
    #
    # Debian Jessie ships with Boost 1.55, which is too old for rippled
    #
    # - stage: default_scons
    #   env:
    #     - DISTRO=debian-jessie
    #   script:
    #   - cd $DISTRO
    #   - docker build --no-cache -t rippled/$DISTRO .
    #   - docker run --rm -t rippled/$DISTRO /bin/bash -c "cd /rippled && scons && /rippled/build/rippled -u"
    #
    # Wait for https://github.com/ripple/rippled/pull/2269
    #
    # - stage: default_scons
    #   env:
    #     - DISTRO=debian-sid
    #   script:
    #   - cd $DISTRO
    #   - docker build --no-cache -t rippled/$DISTRO .
    #   - docker run --rm -t rippled/$DISTRO /bin/bash -c "cd /rippled && scons && /rippled/build/rippled -u"
    - stage: default_scons
      env:
        - DISTRO=debian-stretch
      script:
      - cd $DISTRO
      - docker build --no-cache -t rippled/$DISTRO .
      - docker run --rm -t rippled/$DISTRO /bin/bash -c "cd /rippled && scons && /rippled/build/rippled -u"
    - stage: default_scons
      env:
        - DISTRO=fedora-25
      script:
      - cd $DISTRO
      - docker build --no-cache -t rippled/$DISTRO .
      - docker run --rm -t rippled/$DISTRO /bin/bash -c "cd /rippled && scons && /rippled/build/rippled -u"
    - stage: default_scons
      env:
        - DISTRO=fedora-26
      script:
      - cd $DISTRO
      - docker build --no-cache -t rippled/$DISTRO .
      - docker run --rm -t rippled/$DISTRO /bin/bash -c "cd /rippled && scons && /rippled/build/rippled -u"
    #
    # Wait for https://github.com/ripple/rippled/pull/2269
    #
    # - stage: default_scons
    #   env:
    #     - DISTRO=fedora-27
    #   script:
    #   - cd $DISTRO
    #   - docker build --no-cache -t rippled/$DISTRO .
    #   - docker run --rm -t rippled/$DISTRO /bin/bash -c "cd /rippled && scons && /rippled/build/rippled -u"
    #
    # Wait for https://github.com/ripple/rippled/pull/2259
    #
    # - stage: default_scons
    #   env:
    #     - DISTRO=fedora-rawhide
    #   script:
    #   - cd $DISTRO
    #   - docker build --no-cache -t rippled/$DISTRO .
    #   - docker run --rm -t rippled/$DISTRO /bin/bash -c "cd /rippled && scons && /rippled/build/rippled -u"
    - stage: default_scons
      env:
        - DISTRO=opensuse-42.3
      script:
      - cd $DISTRO
      - docker build --no-cache -t rippled/$DISTRO .
      - docker run --rm -t rippled/$DISTRO /bin/bash -c "cd /rippled && scons && /rippled/build/rippled -u"
    - stage: default_scons
      env:
        - DISTRO=opensuse-tumbleweed
      script:
      - cd $DISTRO
      - docker build --no-cache -t rippled/$DISTRO .
      - docker run --rm -t rippled/$DISTRO /bin/bash -c "cd /rippled && scons && /rippled/build/rippled -u"
    - stage: default_scons
      env:
        - DISTRO=ubuntu-16.04
      script:
      - cd $DISTRO
      - docker build --no-cache -t rippled/$DISTRO .
      - docker run --rm -t rippled/$DISTRO /bin/bash -c "cd /rippled && scons && /rippled/build/rippled -u"
    - stage: default_scons
      env:
        - DISTRO=ubuntu-17.04
      script:
      - cd $DISTRO
      - docker build --no-cache -t rippled/$DISTRO .
      - docker run --rm -t rippled/$DISTRO /bin/bash -c "cd /rippled && scons && /rippled/build/rippled -u"
    - stage: default_scons
      env:
        - DISTRO=ubuntu-17.10
      script:
      - cd $DISTRO
      - docker build --no-cache -t rippled/$DISTRO .
      - docker run --rm -t rippled/$DISTRO /bin/bash -c "cd /rippled && scons && /rippled/build/rippled -u"
    #
    # cmake default builds
    #
    #
    # Rippled does not build with musl without compatibility patches atm.
    #
    # - stage: default_cmake
    #   env:
    #     - DISTRO=alpine-3.5
    #   script:
    #   - cd $DISTRO
    #   - docker build --no-cache -t rippled/$DISTRO .
    #   - docker run --rm -t rippled/$DISTRO /bin/bash -c "mkdir /rippled/build && cd /rippled/build && cmake .. && cmake --build . && /rippled/build/rippled -u"
    # - stage: default_cmake
    #   env:
    #     - DISTRO=alpine-3.6
    #   script:
    #   - cd $DISTRO
    #   - docker build --no-cache -t rippled/$DISTRO .
    #   - docker run --rm -t rippled/$DISTRO /bin/bash -c "mkdir /rippled/build && cd /rippled/build && cmake .. && cmake --build . && /rippled/build/rippled -u"
    # - stage: default_cmake
    #   env:
    #     - DISTRO=alpine-edge
    #   script:
    #   - cd $DISTRO
    #   - docker build --no-cache -t rippled/$DISTRO .
    #   - docker run --rm -t rippled/$DISTRO /bin/bash -c "mkdir /rippled/build && cd /rippled/build && cmake .. && cmake --build . && /rippled/build/rippled -u"
    - stage: default_cmake
      env:
        - DISTRO=archlinux
      script:
      - cd $DISTRO
      - docker build --no-cache -t rippled/$DISTRO .
      - docker run --rm -t rippled/$DISTRO /bin/bash -c "mkdir /rippled/build && cd /rippled/build && cmake .. && cmake --build . && /rippled/build/rippled -u"
    #
    # CentOS 7 only ships gcc 4.8, which doesn't support C++14
    #
    # - stage: default_cmake
    #   env:
    #     - DISTRO=centos-7
    #   script:
    #   - cd $DISTRO
    #   - docker build --no-cache -t rippled/$DISTRO .
    #   - docker run --rm -t rippled/$DISTRO /bin/bash -c "mkdir /rippled/build && cd /rippled/build && cmake .. && cmake --build . && /rippled/build/rippled -u"
    - stage: default_cmake
      env:
        - DISTRO=debian-buster
      script:
      - cd $DISTRO
      - docker build --no-cache -t rippled/$DISTRO .
      - docker run --rm -t rippled/$DISTRO /bin/bash -c "mkdir /rippled/build && cd /rippled/build && cmake .. && cmake --build . && /rippled/build/rippled -u"
    #
    # Debian Jessie ships with Boost 1.55, which is too old for rippled
    #
    # - stage: default_cmake
    #   env:
    #     - DISTRO=debian-jessie
    #   script:
    #   - cd $DISTRO
    #   - docker build --no-cache -t rippled/$DISTRO .
    #   - docker run --rm -t rippled/$DISTRO /bin/bash -c "mkdir /rippled/build && cd /rippled/build && cmake .. && cmake --build . && /rippled/build/rippled -u"
    - stage: default_cmake
      env:
        - DISTRO=debian-sid
      script:
      - cd $DISTRO
      - docker build --no-cache -t rippled/$DISTRO .
      - docker run --rm -t rippled/$DISTRO /bin/bash -c "mkdir /rippled/build && cd /rippled/build && cmake .. && cmake --build . && /rippled/build/rippled -u"
    - stage: default_cmake
      env:
        - DISTRO=debian-stretch
      script:
      - cd $DISTRO
      - docker build --no-cache -t rippled/$DISTRO .
      - docker run --rm -t rippled/$DISTRO /bin/bash -c "mkdir /rippled/build && cd /rippled/build && cmake .. && cmake --build . && /rippled/build/rippled -u"
    - stage: default_cmake
      env:
        - DISTRO=fedora-25
      script:
      - cd $DISTRO
      - docker build --no-cache -t rippled/$DISTRO .
      - docker run --rm -t rippled/$DISTRO /bin/bash -c "mkdir /rippled/build && cd /rippled/build && cmake .. && cmake --build . && /rippled/build/rippled -u"
    - stage: default_cmake
      env:
        - DISTRO=fedora-26
      script:
      - cd $DISTRO
      - docker build --no-cache -t rippled/$DISTRO .
      - docker run --rm -t rippled/$DISTRO /bin/bash -c "mkdir /rippled/build && cd /rippled/build && cmake .. && cmake --build . && /rippled/build/rippled -u"
    - stage: default_cmake
      env:
        - DISTRO=fedora-27
      script:
      - cd $DISTRO
      - docker build --no-cache -t rippled/$DISTRO .
      - docker run --rm -t rippled/$DISTRO /bin/bash -c "mkdir /rippled/build && cd /rippled/build && cmake .. && cmake --build . && /rippled/build/rippled -u"
    - stage: default_cmake
      env:
        - DISTRO=fedora-rawhide
      script:
      - cd $DISTRO
      - docker build --no-cache -t rippled/$DISTRO .
      - docker run --rm -t rippled/$DISTRO /bin/bash -c "mkdir /rippled/build && cd /rippled/build && cmake .. && cmake --build . && /rippled/build/rippled -u"
    #
    # OpenSUSE doesn't ship static boost libraries but rippled currently enforces it
    #
    # - stage: default_cmake
    #   env:
    #     - DISTRO=opensuse-42.3
    #   script:
    #   - cd $DISTRO
    #   - docker build --no-cache -t rippled/$DISTRO .
    #   - docker run --rm -t rippled/$DISTRO /bin/bash -c "mkdir /rippled/build && cd /rippled/build && cmake .. && cmake --build . && /rippled/build/rippled -u"
    # - stage: default_cmake
    #   env:
    #     - DISTRO=opensuse-tumbleweed
    #   script:
    #   - cd $DISTRO
    #   - docker build --no-cache -t rippled/$DISTRO .
    #   - docker run --rm -t rippled/$DISTRO /bin/bash -c "mkdir /rippled/build && cd /rippled/build && cmake .. && cmake --build . && /rippled/build/rippled -u"
    - stage: default_cmake
      env:
        - DISTRO=ubuntu-16.04
      script:
      - cd $DISTRO
      - docker build --no-cache -t rippled/$DISTRO .
      - docker run --rm -t rippled/$DISTRO /bin/bash -c "mkdir /rippled/build && cd /rippled/build && cmake .. && cmake --build . && /rippled/build/rippled -u"
    - stage: default_cmake
      env:
        - DISTRO=ubuntu-17.04
      script:
      - cd $DISTRO
      - docker build --no-cache -t rippled/$DISTRO .
      - docker run --rm -t rippled/$DISTRO /bin/bash -c "mkdir /rippled/build && cd /rippled/build && cmake .. && cmake --build . && /rippled/build/rippled -u"
    - stage: default_cmake
      env:
        - DISTRO=ubuntu-17.10
      script:
      - cd $DISTRO
      - docker build --no-cache -t rippled/$DISTRO .
      - docker run --rm -t rippled/$DISTRO /bin/bash -c "mkdir /rippled/build && cd /rippled/build && cmake .. && cmake --build . && /rippled/build/rippled -u"
    # This is too expensive for travis
    #- stage: build_all
    #  script:
    #  - cd $DISTRO
    #  - docker build --no-cache -t rippled/$DISTRO .
    #  - docker run --rm -t rippled/$DISTRO
